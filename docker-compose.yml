version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: satyashield-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: satyashield123
      MONGO_INITDB_DATABASE: satyashield
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - satyashield-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: satyashield-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - satyashield-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: satyashield-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:satyashield123@mongodb:27017/satyashield?authSource=admin
      REDIS_URI: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      SEBI_API_KEY: your-sebi-api-key
      NSE_API_KEY: your-nse-api-key
      BSE_API_KEY: your-bse-api-key
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - satyashield-network

  # AI Engine
  ai-engine:
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    container_name: satyashield-ai-engine
    environment:
      PYTHONPATH: /app
      MONGODB_URI: mongodb://admin:satyashield123@mongodb:27017/satyashield?authSource=admin
      REDIS_URI: redis://redis:6379
      MODEL_PATH: /app/data/models
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./ai-engine:/app
      - ai_models:/app/data/models
    networks:
      - satyashield-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: satyashield-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      NEXT_PUBLIC_AI_ENGINE_URL: http://localhost:8000
      NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - satyashield-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: satyashield-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - satyashield-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: satyashield-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - satyashield-network

  grafana:
    image: grafana/grafana:latest
    container_name: satyashield-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - satyashield-network

volumes:
  mongodb_data:
  redis_data:
  ai_models:
  prometheus_data:
  grafana_data:

networks:
  satyashield-network:
    driver: bridge
